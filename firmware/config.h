#pragma once

// Update rates.
#define ACTIVE_SENSING_UPDATE_RATE  5000
#define DISPLAY_UPDATE_RATE         100000
#define GATE_UPDATE_RATE            1
#define OPL3_UPDATE_RATE            1
#define GATE_TRIGGER_VALUE          1024
#define SAVE_TIMER                  50000

// Panel layout
//#define PANEL_ROW_5_0
#define PANEL_ROW_3_2

// MIDI setup.
#define MIDI_VOICES_ENABLE          true
#define MIDI_PERCUSSION_ENABLE      true

const uint8_t VOICE_TO_PERCUSSION[6] =
{
  36, // Bass drum
  38, // Snare drum
  47, // Mid tom
  43, // Low tom
  42, // Closed hi-hat
  49, // Crash cymbal
};

// Encoders & buttons
enum EncoderIds
{
  ENCODER_MODE_SELECT = 0,
  ENCODER_A,
  ENCODER_B,
  ENCODER_C,
  ENCODER_D,
  ENCODER_E,
  ENCODER_F,
  ENCODER_G,
  ENCODER_H,

#if defined(PANEL_ROW_5_0)
  ENCODER_VOICE_OP = ENCODER_A,
  ENCODER_VOICE_FEEDBACK = ENCODER_B,
  ENCODER_VOICE_PITCH_FINE = ENCODER_C,
  ENCODER_VOICE_PITCH_COARSE = ENCODER_D,

  ENCODER_ENV_A = ENCODER_A,
  ENCODER_ENV_D = ENCODER_B,
  ENCODER_ENV_S = ENCODER_C,
  ENCODER_ENV_R = ENCODER_D,

  ENCODER_OP_ATTN = ENCODER_A,
  ENCODER_OP_WAVE = ENCODER_B,
  ENCODER_OP_MULT = ENCODER_C,
#elif defined(PANEL_ROW_3_2)
  ENCODER_VOICE_OP = ENCODER_F,
  ENCODER_VOICE_FEEDBACK = ENCODER_B,
  ENCODER_VOICE_PITCH_FINE = ENCODER_H,
  ENCODER_VOICE_PITCH_COARSE = ENCODER_D,

  ENCODER_ENV_A = ENCODER_F,
  ENCODER_ENV_D = ENCODER_B,
  ENCODER_ENV_S = ENCODER_H,
  ENCODER_ENV_R = ENCODER_D,

  ENCODER_OP_ATTN = ENCODER_F,
  ENCODER_OP_WAVE = ENCODER_B,
  ENCODER_OP_MULT = ENCODER_H,

#endif

};

enum ButtonIds
{
  BUTTON_MODE_SELECT = 0,
};

// Colors
#define COLOR_DEFAULT             0b1000010000010000
#define COLOR_BACKGROUND          0b0000000000000000
#define COLOR_TITLE               0b1111111111111111
#define COLOR_SELECTED            0b0000011110000000
#define COLOR_MIDI_IDLE           COLOR_DEFAULT
#define COLOR_MIDI_ACTIVITY       0b0000011110000000
